{
  "@context": "https://linked.art/ns/v1/linked-art.json",
  "id": "https://example.org/cdkg/LinguisticObject/presentation/15",
  "type": "LinguisticObject",
  "_label": "Textual content of \"Legal Knowledge Graphs\"",
  "classified_as": [
    {
      "id": "http://vocab.getty.edu/aat/300027388",
      "type": "Type",
      "_label": "Transcript"
    }
  ],
  "content": "Hello and welcome to our presentation on legal knowledge graphs. My name is Vaishali I'm a Knowledge Engineer at Legislate, and in this presentation, we will be discussing how knowledge graphs are used in the legal sector and how they can be used with documents in general. As we all know, knowledge graphs have a variety of applications from technology to retail because of their flexible nature. And we'll be exploring how and why knowledge graphs are useful for legal documents and explaining some of their use cases. So a bit about legislate. Now legislate is a contract management platform that makes dealing with contracts easier for all parties involved. We were founded in twenty twenty because of how long it takes to make contracts that often aren't very complicated and because of the pain in negotiating contracts. So negotiating contracts can often be difficult. It can also it can often take a lot of time and there's often a lot of back and forth that happens with this. It also usually requires, a lawyer to go through. So sorry. The documents the contracts need to go through a lawyer, which can often be very costly, But legislator removes the need for us to do this. We're a team of eleven based between Oxford and Seville, and we consist of a legal, technical, and sales team. Our aim is to make the end to end contracting process as simple simple as possible for anybody who decides to use the platform regardless of their background. One of the things that we've come across is that contracts often contain a lot of legalese and can be difficult to understand. So we're really trying to reduce the amount of legalese within our contracts to make them easy to understand for anybody who reads them. So we and we aim to make our contract as usable as we can by using knowledge graphs to, connect contracts together and make contracts easier to deal with at scale. So our current customers consist of small businesses and property managements, property managers or letting agents who deal with contracts on a regular basis, but can't necessarily justify spending huge amounts of money on a lawyer when a lot of their contracts are a lot of the same template, but tailored towards individual, properties, or individuals. So they are often exactly the same with just some key terms being changed. And paying money for this or paying a large amount of money for this can often seem, unnecessary. So what we're trying to do is make this as easy as possible with legislate. And so a bit about me, I'm a knowledge engineer at legislate. I am primarily responsible for dealing with knowledge graphs and data management surrounding knowledge graphs. So we're using knowledge graphs to organize our data in the best way possible so that we can manipulate and extract insights from our data. Knowledge graphs have given us the ability to navigate through our data in a way we never have before. And one of the key things that we've noticed is to ensure we set up our data in the best possible way so that it's easy to look at, easy to navigate through, and it makes it as easy as possible to get the most out of it. That's one of the main areas I work work in, and one of the main challenges I'd say I've I've been encountering with knowledge graphs, especially because it's a new sector, but I've really enjoyed the process of dealing with them. So why do documents need to be structured and linked? So as you all know, legal documents can be tedious and difficult to understand for both humans and machines. Generally, most people will skim through legal documents, struggle to understand the terminology. They may not even bother reading the document properly. And we're trying to use knowledge graphs to break down this information to make it easier to read for anybody who is involved. A lot of contract data is in unstructured format and is in unstructured formats, and converting this into a digital computer readable format can be a challenge. Businesses also can't always rely on solely computers to do this for them because of the nature of the documents, because of the accuracy and security of the documents as well. So for example, in, in a industry like healthcare, the nature of the information is often sensitive, and you may not want you may want some human supervision over this. And so using knowledge graphs to, automate this process, but also have human input, it really helps make this a more trustworthy process for anybody who decides to use it. And contracts are not natively machine readable, which makes them difficult to search and keep track of. So by using knowledge graphs, to organize this data, we can make them easier to follow. Contracts are difficult to understand and difficult to understand in an individual format. And if we have a hundred hundreds of thousands of contracts, that adds another layer of complexity to this, and that in itself is another challenge to manage. So if we can use knowledge graphs to better organize documents, we can allow everybody to get the most most out of their documents and not worry about what they're getting themselves into. So over here, we just have a a little diagram showing you what the problems with, documents can be. So if we have one contract, this is easy to, this is easy to process for a trained human. So, generally, somebody in the legal sector. If we have a few, this is manageable for a trained human, so somebody from the legal sector. But if we have hundreds of them, this is difficult for even a somebody from the legal sector. It's, having a knowledge graph to help make this process easier, makes it more manageable, and makes it easy for anybody to understand, not just necessarily a trained human. So why should you structure documents with knowledge graphs? So contracts contain highly connected information, and knowledge graphs can make them easier to process and search at scale. So contracts can contain connected fields. And as we all know, knowledge graphs are flexible and allow you to make links, between nodes. So using knowledge graphs, we can organize contracts in a digestible and easy to follow format and use this data in a variety of ways. So, essentially, knowledge graphs allow us to organize contracts and break them down into smaller chunks that anybody can understand and use it in a variety of ways. So over here, we have an example of a employment offer letter and an employment agreement. So when you hire somebody, you'd often be issuing them an employment offer letter and an and an employment agreement. But a lot of these fields will be exactly the same across both contracts or across both legal documents. The job title would be the same. The salary would be the same. The line manager would be the same. And instead of having to copy this over, we could essentially just link these two documents and copy the fields over by using knowledge graphs. So this is another diagram of how we can link documents. As I was saying, when you hire an employee, you will often issue an offer letter and a employment agreement. And instead of having two separate documents that aren't linked, we can use a graph, which is natively machine readable and understandable. It's also easy to search and query to link these documents. So let's say this was our employment agreement, and this was our employment agreement, and this was our offer letter. Now these fields might be the same. So this might be the salary field. This might be the job title, and this might be the line manager. We can then create links between these two contracts because they will contain the same information. And by linking them, we make them easier to search and query. It's easier for an employer to keep track of all their employment contracts and keep track of all their employment, letters or contracts with with a specific person and makes it easier for them to keep track of. So reasoning is something that also allows us to, add more information into our database and enrich our data. So legal documents are bound by the law, and, hence, they have rules they need to follow in order to be compliant. This is where rule based reasoning can be useful because we can use it to validate contract data. So legal documents, may will have clauses, and by using rule based reasoning, we can validate the clauses that are within a document or ensure that clauses are written correctly by using rule based reasoning. Rule based reasoning generally uses an if then format, whereby if the condition of the rule is met, then the latter part of the rule can be applied to the dataset, which can help us validate contract data because we can validate certain fields within a contract. So in an employment agreement, we can validate that the salary field was there, the job title field was there, benefits, and insurance details were there. We can also use reasoning to connect contracts as we've previously discussed and infer new relationships based on the information available to us. Querying, as you all know, is traditionally the way in which you interact with a knowledge graph. So with reasoning, querying then becomes really insightful to us because we can use rules to determine a lot to predetermine a lot of the information that is tied to our documents. As you all know, querying generally uses sparkle to interact with the data store. And based from based off reasoning, we can use sparkle to interact with our data store and the new insights from rule based reasoning. One of the other things that I think is quite useful with rule based reasoning is it allows you to act with the benefit of hindsight. So if you have access to your data store, you can look at all the information you have available to you and, like I said, enrich your data, with further relationships because you now know what you're dealing with, and you can add more relationships into the data to make it intuitive to understand. I also personally think that sparkle and queries are an intuitive method of interacting with data. You're looking for patterns and relationships and matching them up. So using queries to interact with your database can be easy to pick up and easy to understand, which is something I found as well, when I first started working with Agistay and working with Monograph, because I found the pattern nature really easy to follow and easy to pick up. And now we're gonna go through some use cases of using knowledge graphs, in the legal sector and giving you some examples of how exactly this can work. So we'll start with an easy example and then work our oh, whoops. Sorry. And and then work our way up. So one of the easiest ways is to ask questions and retrieve answers. And we can do this simply by querying our database. So it can be as simple as asking your database how many of our contracts are employment agreements. And as I was saying previously how we can add, we can enrich our data with the benefit of hindsight. Here, we're asking our database how many contracts are employment agreements, but we've added this employment agreement class by looking at all the contracts that we have in our data store and adding in further rules to create classes and enrich our data. And although this can be done by other databases, this is a lot quicker with knowledge graphs, and we can use the reasoning to help clear up some information. We can also use queries to calculate metrics. So like like I've just said, you can calculate metrics using other databases, but we can make this a lot quicker with knowledge graphs, and we can also provide users with tailored metrics, that are specific to them. So this metric is looking through the database to find all the active teams within team two. So it's looking for all the contracts that are a part of team two, and then it's looking for the start and end dates attached to the contract and filtering for if the end date is after the date and time right now and if the start date is before the date and time right now. We also have an optional field for the end date. So for a contract like an employment agreement, that may not necessarily have an end date because an employee can choose when they wish to leave. The end date is optional. And so if the end date isn't bound, we just look for if the start date is before the date and time right now. So that's just a little breakdown of what this query is doing, but then we can then append this information to a metric and use it wherever we like. Building upon this, we can also use knowledge graphs to provide users with contract specific metrics. So provide them with metrics that are tailored to, their contracts or to their their dataset, and this doesn't necessarily have to be an employment metric. It can be a property metric. It can be a business metric and look at NDAs and the average term. This is just an example that I've picked out. So this metric is for a given team, it's looking for the total salary based on all the contracts within that team that somebody has created. And we can also build a histogram that automatically arranges itself based on the values of the contracts. So say we were to hire another team member who has a salary of eighty thousand pounds, this histogram will automatically arrange itself, to not only include include them in the in the distribution and post very likely at the end of this distribution, But, this this distribution here will also rearrange itself, to organize the data based on the information in the data set. So it will work out the median and the quartiles accordingly based on the contracts within the database, and, it will re rearrange itself accordingly, which is really handy and just makes sure that this this information is tailored to a user and gives them all the insight that they require. As we've discussed previously, we can also use contracts to validate contract structures, and verify that contract configurations are compliant, with logical, legal, and user defined compliance rules. So an employment agreement, for example, in order to be classified as an employment agreement, would need to contain a salary, a job title, a work location, and a restriction period. These are just some examples of fields. They can contain more or less, but these are some of the fields that would define the contract to be an employment agreement. And this is important because the employee needs to know their necessary obligations as an employee, and the employer is obligated to provide them with this information. Using knowledge graphs and reasoning, we can verify if a particular contract's if sorry. Using knowledge graphs and reasoning, we can verify if a particular contract should have particular clauses depending on the type of contract it is, and we can we can say whether they should be included or whether they shouldn't be. One of the last use cases we can have for knowledge graphs are smart folders. So using we can further classify our contracts by using smart folders, that automatically filter contracts based on active data. So they'll filter through documents by looking at the information inside them and, organizing contracts into folders accordingly. So they look through your data and they look for key information and they can filter by a start date, a particular line manager, by contracts with a specific individual, by looking at contracts within a specific year, or by look by a group of contracts, with a company as a specific party. So it will look at the entries of a contract and then make these groupings accordingly. It can connect contracts, and it can draw insights that would be time consuming to do on our own without the use of a knowledge graph or rule based reasoning. To do this manually, you'd have to look at the contract terms, analyze them, and link them manually. And using knowledge graphs, this completely removes the need to do that. So we've spoken about some use cases, and we're gonna dive into another example of how we can use knowledge graphs, which is by visualizing contracts. We've also spoken about how contracts can be difficult to understand and difficult to read through. And so once you have access to the fields of a contract in a knowledge graph, we can derive insights from contract data to make it it accessible to non lawyers. And one of the ways we can do that is to make the contract more visual or to just simply make the contract easier to understand by presenting the information in another way. So by storing the information in a contract by its specific contract fields, we can easily access the information in these fields and use it in multiple areas. One of the examples of this is that letting agents will often provide their, student let lets with a a key information sheet that will be provided based on each individual contract and tailored based on each individual contract. It might have the key information that student will need to know, such as when the rent is due, how much late fees are, how much notice is given for reviewing. And this could be done via a template that a letting agent may have where they just simply replace the information by looking through the the linked contract and adding this information into the template. But, again, this would have to be edited according to each individual contract. And using knowledge graphs, we can make this process a lot easier. So using knowledge graphs and reasoning, we can derive this information using domain expertise. We can use reasoning to access the information depending on the type of field it's being stored in. So, basically, if we know what type of contract field a field is, such as if it's a salary field, we can access the information in this field, which will be the entry to for the salary, and, use this in a variety of formats, either by visualization, so by showing it in a more visual manner, or simply, showing it in a partially visual manner, but a easy to understand manner. So that instead of looking through the whole contract, a individual can just look at the key summary, the key summary fields and get exact get the information that they need. And, yeah, this can be presented in any way, that a user decides. So this is just an example of us showing you that, we've got this information for my knowledge graph. This could be a string that is just stored, and then this value is filled is sorry. This value is filled with the, value from the contract. And this is what will change, according to each individual contract. And this is made a lot easier using knowledge graphs, because it can just look for the the fields stored within a contract and change it accordingly, which again ties in with our aim to make contracts easier to understand, and easy for anybody to deal with no matter what their background is. So as we've discussed, knowledge graphs have a number of different practical and helpful uses in the legal sector, and we've hope we've been able we hope we've been able to shed some light on this. It allows us to extract insights and information from legal documents. We can use rule based reasoning to infer new relation relationships or simply build more relationships into the graph and make our data more insightful. Using rule based reasoning, we can also get more useful queries, and interact with our data in a more useful manner and find exactly what it is we're looking for. Knowledge graphs have the ability to unlock so much information, and we've only just touched on it. But we hope to continue our research and explore this field so that we can make the best use of them and really show what knowledge graphs can do, and what the what their potential is. Thank you for your time. And if you have any questions, I'll be happy to take them.",
  "language": [
    {
      "id": "http://vocab.getty.edu/aat/300388277",
      "type": "Language",
      "_label": "English"
    }
  ],
  "created_by": {
    "id": "https://example.org/cdkg/Creation/presentation/15",
    "type": "Creation",
    "caused_by": [
      {
        "id": "https://example.org/cdkg/Activity/presentation/15",
        "type": "Activity",
        "_label": "Presentation of \"Legal Knowledge Graphs\""
      }
    ]
  },
  "digitally_carried_by": [
    {
      "id": "https://example.org/cdkg/DigitalObject/recording/15",
      "type": "DigitalObject",
      "_label": "Recording of \"Legal Knowledge Graphs\""
    }
  ]
}