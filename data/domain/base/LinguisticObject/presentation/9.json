{
  "@context": "https://linked.art/ns/v1/linked-art.json",
  "id": "https://example.org/cdkg/LinguisticObject/presentation/9",
  "type": "LinguisticObject",
  "_label": "Textual content of \"Hybridization of Machine Learning and Operational Research is the future of AI\"",
  "classified_as": [
    {
      "id": "http://vocab.getty.edu/aat/300027388",
      "type": "Type",
      "_label": "Transcript"
    }
  ],
  "content": "Hello. My name is Nicolaj Van Omme, and I'm the CEO of Funartech, a startup in Montreal doing AI a little bit differently. And today, I'm gonna talk about this way of doing AI. So I'm gonna talk about the hybridization of ML machine learning and OR operations research, and I'll try to convince you that this is this combination, the future of AI. I would like to thank the connected data world team. Thank you very much for hosting me. It's always a pleasure and an honor to be able to present the work we are working on. So I'm gonna use two terminology, two abbreviations today, o r, operations research, and m l, machine learning. Everybody knows what machine learning is. Operations research, I'm gonna talk about it, what it is, what you can do, and why you should mix it with ML. But let's say that it's the science of optimization. So when we are talking about analytical approaches to solve complex industrial problems, Most of the people have this in mind. You have the data science here combined with big data and then artificial in intelligence. And within artificial especially here in Montreal. But there is at least one actor missing, and this is, of course, But there is at least one actor missing, and this is, of course, operations research. Actually, although all those fields are based in a way or another on operations research. So what is operation research? I said it's the science of optimization. It's one of the science of optimization. It's a very important science of optimization. So let's look at a real problem. You have a left column here where we are talking about reality, and you have the right column here where we are talking about the mathematical world. The idea is that you are taking a real problem, and you are transforming it. You are modeling it into the mathematical world. Let's say you have a city, Konigsberg, Kaliningrad now, where you have seven bridges and you ask yourself the following question. Is it possible to start a tour, let's say here, and cross each bridge only once and coming back to the starting point? Is this possible? The great Euler answered that question by the negative. No. It is not. And he did this by inventing basically graph theory. So he modeled that problem with a graph where the bridges are represented by the edges and the pieces of land that are connected by the bridges by the nodes. So the question now becomes, is it possible to start from one node, let's say this one, and travel the graph going only once through each edge and to a whole tour passing through all edges and coming back. Is this possible? No. For instance, if you look at this note, well, it's it has three, edges, which means that if I go once in the note, I can go out of the note. But if I come back, I cannot go out without crossing again another bridge. So now the question becomes, I have to go at least once or twice over a bridge, an edge. What is the minimal amount of edges I have to cross twice or more, to do a whole tour and to pass on every edge at least once. That was solved by a Chinese mathematician, Kwan Maiko in the sixties. And, basically, he found a way to solve this, and the solution here is to add those two edges. If you add those two edges, you are able to do a whole tour passing at least once on every edge. Normally, the way you go from reality to the mathematical world is really difficult and vice versa. The translation from a mathematical solution to take a decision in the real world is also difficult. In this case, it's not really that difficult because you just take the tour and you applied it in reality. So that's basically operations research. You take a problem in reality and you translate this into the mathematical world. You solve it, and then you can take some decision with the solution you get mathematically. So OR exists since the second World War. And most of the time, we see an improvement of twenty, thirty percent. That's compared to solutions that are not using OR, so it's extremely efficient. Sometimes you don't get those improvements, but it's still worth it. It's already used extensively in a lot of sector, of course, like transportation, Internet, the army, the supply chain. There is no supply chain without OR. And, again, it's the science of of optimization. If you think about minimizing or maximizing something, you should think that probably there is a kind of solution in OR to do that. So to give you an idea of the efficiency of OR compared to ML because you can also optimize with machine learning, let's take the TSP, the traveling salesman problem. So that's the problem where you have cities, the red dots here in the right column, and you want to do a whole tour visiting each city once. So you enter a city, and then you go out of the city. You visit the next one, and you do a whole tour, and you want this tour to be minimal. This is what we called an NP hard problem. It means that it's really difficult to solve. If you try to solve it with ML approach, the best approaches, the best algorithms until now are able to solve this problem exactly with one hundred cities, which is great. But if you look at solution in OR, they're able to solve the same problem with one hundred thousand cities. So there is a difference. And because it's a NP hard problem, it means that if you have a solution for one hundred nodes, cities, and you want to solve the same problem with one hundred twenty cities, it's not like you can put some more computing power. You probably need another algorithm. So you really see the difference between both approaches. OR is extremely efficient for the optimization. So why is it also important? It's not only for the efficiency, but also because with OR, you can do prescriptive analysis. So in front of you, you have what Gartner is telling you by telling you that the analytical approaches can be divided in four types of analysis. And, basically, each analysis is answering one question. You should see this as a continuum of questions. So if you ask one of the question, you get some answers. You use those answers to answer the other questions. And this is why there is a wheel in the middle because it's really a system that is dynamic and it is continuous. So the first type of analysis is the descriptive one, and it's basically answering the question what has happened. So, basically, you do an assessment of what is happening. Then there is the diagnostic analysis, which is a little bit more interesting, and you are answering the question why did it happen. And, also importantly, do you like it? Do you like what you see? Yes? Why? No? Why? What can you do about this? And then there is the third one that we are talking so much these days, the predictive analysis, which answers the question what will likely happen. So, basically, you're constricting a system. You give an input, and your system is giving you a likely output. It's giving you an output most of the time with a certain probability. This is really nice, and this is where ML machine learning tracks. But there is another analysis which is called the prescriptive analysis, which answer the question, what is the optimal action? It's more than just asking for the optimal action. Actually, I see this as a change of paradigm in the sense that instead of constructing a system where you give it an input and it returns you an output, you are giving it an output, and the system is basically constructing an input. That input that would give you the desired output. So it's really a different way of, working, and it's way more efficient. And to use that prescriptive analysis, actually, you are also using all the other analysis. So MLOR hybridization. Why? Well, first of all, you have those no free lunch theorems that basically tells you that there is no universal approach. It seems that it doesn't hold for ML. Okay? But it still holds in mathematics. But the real reason is that you have way better results when you combine machine learning and operations research. First of all, you can optimize way better because OR optimizes better than ML. But it's not only that. You get also more robust solutions. You get some kind of explainability. Basically, when you combine both, you combine the domain knowledge because OR is able to take the knowledge from a domain. You can ask the engineers of the company and ask them what they do, what the field is about, and you can model this into equations. So you get the domain knowledge and then you get the experience knowledge, the historical data with ML and you combine both, which means that if you have the domain knowledge, you already can start the project without data. Yes. You can do analytical approaches without data. You'll get data along the way, but you can start right away because you already have some knowledge, which is the domain knowledge. And, basically, when you combine both, you can do things that are simply impossible with OR only or ML only. I'm gonna give you, some examples later. So how can we combine ML and OR? Let's say that basically, at Virnatec, we found that there are four combinations at least of both fields. The first one is now classical in the sense that it's it's becoming mainstream, but it wasn't a few years ago. I would say it started around two thousand nineteen to be accepted as something really normal. So it's the use of both as black boxes. So you're combining both but without interaction between the two. You use one and then you use the other. And most of the time, you use first ML machine learning and then you use our operations research. The idea is that with ML, you get some predictions. And then once you have those predictions, you can optimize with that insight. I'll give you an example after, I mean, with the next slide. Then you can use both fields to improve the other. This is quite technical, and it works really well. You can use OR to improve ML, in a kind of way. ML is the optimization of predictions. So optimization OR is able to optimize and help ML. And it works the other way around also. ML can improve OR. Those are two technical ways to use them. There are not so many teams doing that, and most of the time, it's basically academic research, but it's really, it it shows some results that are really nice. We are at the beginning of that. And then there is a fourth combination, and, that's really new. And it's a complete hybridization of both ML and OR where you develop new algorithms. The idea is that you truly understand what ML is fundamentally and what OR is fundamentally and how you can combine them together. And graph neural networks, I would say that this is part of this. Graph neural networks are really good, really nice. I mean, we know this, in this conference, but, actually, it's only the beginning. There are other ways to combine them on a really fundamental level. So my favorite example to combine OR and ML the first way as two black boxes. Let's say you're a train company, you have trucks, and you need to repair and replace them. How can you do this for a least cost? You can do this in two steps, two separate steps. The first step, you put some cameras under your wagon and then you you let your train flow, you take pictures, and then you combine. You stitch the pictures together probably with deep learning, machine learning. And you can also study on those pictures what type of reparations or replacement you need to do. You're able to say, oh, that track needs to be replaced in two years. This track needs to be repaired, and it's type of repairion a. But once you do this, you don't know how to act because the idea is that maybe if you send the team to replace or repair a track, maybe the track that is just next to it shouldn't be repaired or replaced right away, maybe six months later. But because the team is already there, it would cost you loss less sorry, to do the reparation or the replacement right away because they're already there instead of sending another team six months later. This is optimization, and this is what you can do with OR. So the second step, once you have a map of your tracks, use OR to optimize the way your teams can repair, replace the tracks. I'm gonna give you two examples of real industrial projects that we did here at Fanatec combining ML and OR. Basically, in the three, four types of combinations that I showed you. Here, we are trying in real time to optimize bookings. So it's for a chain restaurant, but not only that, it's also for a company that was doing some events. And they ask us to be able to optimize the booking in the sense that they want to optimize the number of people that could enter their restaurants. So in front of you, you see effective examples examples, sorry, of a restaurant with twelve tables. Each row corresponds to one table, and each column represents the fifteen minutes time slot. And let's say that this is an evening. And in blue, the blue boxes are actually bookings, reservation. So for instance, this one is a reservation for a group of seven people. So, basically, you have people calling you on the phone or going on your website and saying, well, we are coming a Tuesday at six. We have four. And because it's a Tuesday at six, there are only four, you figure out with ML that probably they're gonna stay for two hours. The thing is there is a lot of stochasticity in this problem in the sense that, no, they are not coming at six. They're coming at six thirty. No. They are not four. They're only three. And they don't stay for two hours. They stay for four hours. So a lot of stochasticity, a really complex problem. We created a system combining ML and OR, and this is a solution you get from that system in real time. What I really like is that the system learned by itself that the best way to allow more people to come into the restaurants to optimize the booking not reserved, booking. And so those tables here are quite empty while the others are are quite full. This was the best way the system came up to optimize the number of people coming. But our customers, they didn't like this at all. Because if you have a table like this one that is empty for the whole evening, it means actually for the customers and people working in the restaurant that it's not a good restaurant. There aren't so many people because the table is empty. So our customer didn't like this. And what I really like with OR is that actually you can add constraints. So we added a constraint policy, the no long net zone table policy, which basically told the system you cannot do this. You absolutely need to fill the table. This is something you can do with OR. It's really more difficult to do with ML. So solution combination of ML and OR, we use ML to do some estimations, the eating times, the habits, how people are booking, and things like that. And then we quickly discovered, realized that if a restaurant becomes full, you should refuse people. Because if you accept the group, maybe there is another group that is even bigger that you will not be able to accommodate because you you have accepted the first group, and so they are taking the table that the other group could take. So we also made a kind of recommendation recommender system, but it's not an ML version of a recommender system. It's a combination of ML and OR. Basically, we're combining ML and OR for everything we do. And so that's recommender system was able to tell them, okay. Refuse that group because probably you'll get another one that is better. So I'm gonna cut it short to the results. So we got twenty percent more traffic. So twenty percent more people. And we could do that optimization in real time in less than three milliseconds per booking. Here is another example where our customers, wanted to track in real time sausages. So the idea is to be able to track every sausages individually and to be able to say if a sausage is well cooked or overcooked and also to, try to find out which ones are the best sellers. If you look carefully, so this is a computer vision problem, it's very difficult to differentiate sausages. So, they had a system, and they really had a hard time. They had a deep learning system, and they really had a hard time to train it. It really was very, very demanding. Now I'm not gonna give you the exact results, but let's say that they came with that DL system, and it didn't work that well, and it asked for a lot of training resources. And we basically added some OR stuff, and we could manage to reduce significantly the training system, the training time, the training resources, again, by combining ML and OR. The idea is that most of the sausages, they're still I mean, they are just laying on the grill. They don't move. So we took that as an hypothesis. And with OR, we could do some matching, and, this is how we get, way better results. So I'm gonna skip this, and I'm gonna talk about the fourth type of hybridization of ML and OR. This is the most interesting one. This is where you have the graph neural networks and way other combinations of ML and OR. This is current academic research we are doing with professor Jean Drau here in Montreal at Polytechnic. We claim that this combination, graph neural networks, and the other algorithms is the future of AI. We can do things that are not possible with ML or OR alone. It's really the combination of both that allows us to do crazy things. I'm gonna talk about two projects that we are trying to do. The first one is about the injection of emotions into AI. This is something a lot of ML teams all over the world are working on. And then another one is about real intelligence. We think that we can manage to get some real intelligence. I'm not talking about AGI. I'm talking about a definition of machine intelligence, and we think that by combining ML and OR, we could get there now. So emotions. We think that only using ML is not a good idea. Why? There are lots of reasons. The first one is that you need a lot of data, but really a lot. I mean, emotions are really contextual. If you take one individual and you look at how he's changing his emotions during the day, at seven in the morning, at ten in the night, he will not behave the same way. If he's surrounded by his friends, his family, his boss, he will not react the same. So you need that kind of data if you want to use ML. And then, of course, well, of course, not of course, but you see that the data is biased and we that's normal. It it's almost impossible not to have biased data. And then we're talking about one individual with one emotion. Of course, you want the system that is able to change its emotion, which means that the ML way is probably to study historical data where you have changes of emotions. You you need that data. It's even bigger. It's a bigger set. But the real deal breaker here is that there is no way or not no easy way to control your chatbot, let's say. If you see what is happening with the big companies trying to put an emotional chatbot out there, most of the time, they have to unplug it quite soon because it's going totally per sec. And it's very, very difficult to control a chatbot with ML only. If you combine ML and OR, you can control this way better. So that's one of the reason why we think that ML only is not a good idea. And then there is this intelligent, machine intelligence. So it's not AGI. It might lead to AGI, maybe. This is the definition we have of a machine intelligence. So we think that we are able to construct the system that can autonomously, so on its own, change, optimize its internal understanding, the representation of its surroundings of the outside world, but it can do so in terms of concepts and subconcepts. This is something that doesn't exist in ML. And we think that not only you can use concepts and subconcepts, but you can do this very quickly in the sense that that system can learn very quickly and can unlearn very quickly. Basically, this is what we would call a kind of intelligence. It has nothing to do with the brain or an animal. It's machine intelligence, and it's only one type of intelligence for the machines. We're working on the following problem. And you'll see that only using reinforcement learning to solve that problem is probably not a good idea. So we have a maze, and it's a simple maze where you have holes. If your agent is falling in the hole, you're dead. And then you have strawberries. If your agent is eating the strawberries , you get some points, some rewards. The goal is, of course, to get out of the maze, maybe under a certain amount of time and to maximize the number of strawberries you're gonna eat. That's fine. With reinforcement learning, you can do that very easily. It works perfectly. Except that you didn't learn anything. In the sense that if you take a hole and you just, move it one centimeter away, your agent is gonna fall in the hole. So it didn't get a notion, a concept of hole. We think that not only we will be able to displace the holes, but we think that dynamically, we will exchange the roles of the strawberries and the holes, which means that suddenly, if you are eating a strawberry, you die. And if you fall into a hole, actually, you get some rewards. And we think that it's possible during the game to change this several times. Of course, you cannot change all the time because, otherwise, your agent is going crazy and it's impossible to play. But we think that you can change sometimes, and we think that our agent will be able to adapt to this. So this is what we think is possible with the combination of ML and OR. You get way better results. You can do things that are simply impossible with ML only or OR only. Thank you very much for listening, and now I welcome your questions.",
  "language": [
    {
      "id": "http://vocab.getty.edu/aat/300388277",
      "type": "Language",
      "_label": "English"
    }
  ],
  "created_by": {
    "id": "https://example.org/cdkg/Creation/presentation/9",
    "type": "Creation",
    "caused_by": [
      {
        "id": "https://example.org/cdkg/Activity/presentation/9",
        "type": "Activity",
        "_label": "Presentation of \"Hybridization of Machine Learning and Operational Research is the future of AI\""
      }
    ]
  },
  "digitally_carried_by": [
    {
      "id": "https://example.org/cdkg/DigitalObject/recording/9",
      "type": "DigitalObject",
      "_label": "Recording of \"Hybridization of Machine Learning and Operational Research is the future of AI\""
    }
  ]
}